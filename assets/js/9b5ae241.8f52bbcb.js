"use strict";(self.webpackChunkupzaar_docs=self.webpackChunkupzaar_docs||[]).push([[6666],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),y=o,m=p["".concat(c,".").concat(y)]||p[y]||d[y]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=y;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},7219:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={title:"Guides",description:"Upzaar developer guides",hide_table_of_contents:!1},i="Guides",l={type:"mdx",permalink:"/guides",source:"@site/src/pages/guides.mdx",title:"Guides",description:"Upzaar developer guides",frontMatter:{title:"Guides",description:"Upzaar developer guides",hide_table_of_contents:!1}},c=[{value:"Creating your first loyalty customer",id:"creating-your-first-loyalty-customer",level:2},{value:"Step 1: Create a customer account",id:"step-1-create-a-customer-account",level:3},{value:"Step 2: Join loyalty",id:"step-2-join-loyalty",level:3},{value:"Retrieving a customer account &amp; loyalty point balance",id:"retrieving-a-customer-account--loyalty-point-balance",level:2},{value:"Awarding points",id:"awarding-points",level:2},{value:"Redeeming rewards",id:"redeeming-rewards",level:2}],s={toc:c};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"guides"},"Guides"),(0,o.kt)("h2",{id:"creating-your-first-loyalty-customer"},"Creating your first loyalty customer"),(0,o.kt)("p",null,"Usually the first thing you'll when linking up your application is to create a loyalty customer. Creating a loyalty customer will then allow you to award them points, redeem rewards, and return their point balance & tier information. Creating a customer & loyalty member on Upzaar is a two part operation."),(0,o.kt)("h3",{id:"step-1-create-a-customer-account"},"Step 1: Create a customer account"),(0,o.kt)("p",null,"Create the customer account by calling ","[https://developers.upzaar.com/docs/mutations/create-account]"," mutation. e.g:"),(0,o.kt)("p",null,"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"axios"),", creating an account may look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"import axios from 'axios';\n\nconst query = `\n  mutation {\n    create_account {\n      status\n      errors\n      customer_user {\n        uid\n      }\n    }\n  }\n`;\n\nconst client = axios.create({\n    baseURL: 'API_ENDPOINT',\n    headers: {'Content-Type': 'application/json', Authorization: 'ApiKey <your_api_key>'}\n});\n\nclient.post('/graphql', { query })\n  .then(res => {\n    const { data } = res.data;\n    console.log(data);\n  })\n  .catch(err => console.log(err));\n")),(0,o.kt)("h3",{id:"step-2-join-loyalty"},"Step 2: Join loyalty"),(0,o.kt)("p",null,"Call ",(0,o.kt)("inlineCode",{parentName:"p"},"join_loyalty")," with a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"brand_uid"),". Your brand_uid can be retrieved from your admin panel. Once join_loyalty is called, this customer will now become a loyalty member of the provided brand. If you've configured welcome points, the customer will receive the configured amount of welcome points as soon as the loyalty program is joined."),(0,o.kt)("p",null,"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"axios"),", joining loyalty may look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const joinLoyalty = async (brand_uid, customer_uid) => {\n  try {\n    const mutation = `mutation {\n      joinLoyalty(brand_uid: \"${brand_uid}\", customer_uid: \"${customer_uid}\") {\n        status\n        errors\n      }\n    }`;\n\n    const { data } = await axios({\n      url: 'API_ENDPOINT',\n      method: 'post',\n      data: {\n        query: mutation\n      }\n    });\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n")),(0,o.kt)("p",null,"This sample function uses the axios library to make a POST request to a GraphQL API endpoint. It takes in two arguments, brand_uid and customer_uid, and uses them to construct a GraphQL mutation that creates a new ",(0,o.kt)("inlineCode",{parentName:"p"},"BrandUser")," object with those IDs. The response from the API is returned, which in this case, contains the status and errors (if any)."),(0,o.kt)("h2",{id:"retrieving-a-customer-account--loyalty-point-balance"},"Retrieving a customer account & loyalty point balance"),(0,o.kt)("p",null,"In our GraphQL API, you can request most customer data using a single endpoint and add or introduce fields as you see fit."),(0,o.kt)("p",null,"In axios, getting a customer record may look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"import axios from 'axios';\n\nconst query = `\n    query($brand_uid: ID!) {\n      current_customer_user(brand_uid: $brand_uid) {\n        uid\n        full_name\n        phone_number_normalized\n        email\n        avatar_url\n        created_at\n\n        loyalty_member_brands {\n          uid\n        }\n\n        loyalty_info {\n          total_point_balance\n          loyalty_transaction_count\n          points_needed_until_next_reward\n\n          rewards {\n            reward_id\n            name\n            amount_off_currency\n            amount_off_in_subunit\n            percentage_off\n            points_redemption\n            reward_discount_type\n          }\n\n          eligible_rewards {\n            reward_id\n            name\n            amount_off_currency\n            amount_off_in_subunit\n            percentage_off\n            points_redemption\n            reward_discount_type\n          }\n\n          ineligible_rewards {\n            reward_id\n            name\n            amount_off_currency\n            amount_off_in_subunit\n            percentage_off\n            points_redemption\n            reward_discount_type\n          }\n\n          history {\n            type\n            created_at\n            points\n          }\n\n        }\n      }\n    }\n`;\n\nconst client = axios.create({\n    baseURL: 'API_ENDPOINT',\n    headers: {'Content-Type': 'application/json', Authorization: 'ApiKey <your_api_key>'}\n});\n\nclient.post('/graphql', { query })\n  .then(res => {\n    const { data } = res.data;\n    console.log(data);\n  })\n  .catch(err => console.log(err));\n")),(0,o.kt)("h2",{id:"awarding-points"},"Awarding points"),(0,o.kt)("h2",{id:"redeeming-rewards"},"Redeeming rewards"))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkupzaar_docs=self.webpackChunkupzaar_docs||[]).push([[641],{3905:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>y});var o=e(7294);function i(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,o)}return e}function a(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){i(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,o,i=function(n,t){if(null==n)return{};var e,o,i={},r=Object.keys(n);for(o=0;o<r.length;o++)e=r[o],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)e=r[o],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var c=o.createContext({}),s=function(n){var t=o.useContext(c),e=t;return n&&(e="function"==typeof n?n(t):a(a({},t),n)),e},p=function(n){var t=s(n.components);return o.createElement(c.Provider,{value:t},n.children)},u="mdxType",d={inlineCode:"code",wrapper:function(n){var t=n.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(n,t){var e=n.components,i=n.mdxType,r=n.originalType,c=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),u=s(e),m=i,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return e?o.createElement(y,a(a({ref:t},p),{},{components:e})):o.createElement(y,a({ref:t},p))}));function y(n,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof n||i){var r=e.length,a=new Array(r);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=n,l[u]="string"==typeof n?n:i,a[1]=l;for(var s=2;s<r;s++)a[s]=e[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,e)}m.displayName="MDXCreateElement"},187:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=e(7462),i=(e(7294),e(3905));const r={title:"Awarding Points",description:"Give your Customers loyalty points",hide_table_of_contents:!1,sidebar_position:3},a=void 0,l={unversionedId:"api-guides/awarding-points",id:"api-guides/awarding-points",title:"Awarding Points",description:"Give your Customers loyalty points",source:"@site/docs/api-guides/awarding-points.mdx",sourceDirName:"api-guides",slug:"/api-guides/awarding-points",permalink:"/docs/api-guides/awarding-points",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Awarding Points",description:"Give your Customers loyalty points",hide_table_of_contents:!1,sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Retrieving a Customer Account & loyalty point balance",permalink:"/docs/api-guides/retrieving-customer-account"},next:{title:"Redeeming Rewards",permalink:"/docs/api-guides/redeeming-rewards"}},c={},s=[{value:"Collecting using a Point Collection Activity",id:"collecting-using-a-point-collection-activity",level:3},{value:"Collecting a Set Amount of Points",id:"collecting-a-set-amount-of-points",level:3}],p={toc:s};function u(n){let{components:t,...e}=n;return(0,i.kt)("wrapper",(0,o.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Collecting points is a core operation of your loyalty program. We offer two methods of collecting points - via a value on your API - or an existing point collection activity. Using point collection activities ensures you're able to update your point assignments in a single place on our management portal."),(0,i.kt)("h3",{id:"collecting-using-a-point-collection-activity"},"Collecting using a Point Collection Activity"),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"apollo-client"),", collecting on a specific point collection activity may look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'API_ENDPOINT',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'ApiKey <your_api_key>',\n  },\n  cache: new InMemoryCache(),\n});\n\nasync function collectPoints(brandUid, data) {\n  const mutation = gql`\n    mutation ($brandUid: ID!, $data: PointCollectionInput!) {\n      collect_points(brand_uid: $brandUid, data: $data) {\n        status\n        errors\n      }\n    }\n  `;\n\n  try {\n    const response = await client.mutate({\n      mutation,\n      variables: {\n        brandUid,\n        data: {\n          customer_uid: data.customerUid,\n          point_collection_activity_id: 9,\n        },\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n")),(0,i.kt)("h3",{id:"collecting-a-set-amount-of-points"},"Collecting a Set Amount of Points"),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"apollo-client"),", collecting 100 points for a specific customer may look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'API_ENDPOINT',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'ApiKey <your_api_key>',\n  },\n  cache: new InMemoryCache(),\n});\n\nasync function collectPoints(brandUid, data) {\n  const mutation = gql`\n    mutation ($brandUid: ID!, $data: PointCollectionInput!) {\n      collect_points(\n        brand_uid: $brandUid,\n        data: $data\n      ) {\n        status\n        errors\n      }\n    }\n  `;\n\n  try {\n    const response = await client.mutate({\n      mutation,\n      variables: {\n        brandUid,\n        data: {\n          customer_uid: data.customerUid,\n          point_amount: 100,\n          point_collection_activity_id: 9,\n        },\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n")))}u.isMDXComponent=!0}}]);
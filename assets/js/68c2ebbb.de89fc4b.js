"use strict";(self.webpackChunkupzaar_docs=self.webpackChunkupzaar_docs||[]).push([[1162],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(t),y=o,m=p["".concat(u,".").concat(y)]||p[y]||d[y]||a;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=y;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},2329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={title:"Retrieving a Customer Account & loyalty point balance",description:"Get info about a Customer",hide_table_of_contents:!1,sidebar_position:2},i=void 0,c={unversionedId:"api-guides/retrieving-customer-account",id:"api-guides/retrieving-customer-account",title:"Retrieving a Customer Account & loyalty point balance",description:"Get info about a Customer",source:"@site/docs/api-guides/retrieving-customer-account.mdx",sourceDirName:"api-guides",slug:"/api-guides/retrieving-customer-account",permalink:"/docs/api-guides/retrieving-customer-account",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Retrieving a Customer Account & loyalty point balance",description:"Get info about a Customer",hide_table_of_contents:!1,sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Creating your first loyalty customer",permalink:"/docs/api-guides/creating-your-first-loyalty-customer"},next:{title:"Awarding Points",permalink:"/docs/api-guides/awarding-points"}},u={},l=[],s={toc:l};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this guide, you will learn how to use the Upzaar GraphQL API to access customer information and retrieve the current loyalty point balance for a customer's account. Whether you're a developer looking to integrate Upzaar into your own application or a business owner looking to keep track of your customers' loyalty points, this guide will provide you with the information you need to get started. So let's dive in to a simple example of retrieving a customer account and loyalty point balance using the API."),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo-client"),", getting a customer record may look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'API_ENDPOINT',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'ApiKey <your_api_key>',\n  },\n  cache: new InMemoryCache(),\n});\n\nconst query = gql`\n  query($brand_uid: ID!) {\n    current_customer_user(brand_uid: $brand_uid) {\n      uid\n      full_name\n      phone_number_normalized\n      email\n      avatar_url\n      created_at\n      loyalty_member_brands {\n        uid\n      }\n      loyalty_info {\n        total_point_balance\n        loyalty_transaction_count\n        points_needed_until_next_reward\n        rewards {\n          reward_id\n          name\n          amount_off_currency\n          amount_off_in_subunit\n          percentage_off\n          points_redemption\n          reward_discount_type\n        }\n        eligible_rewards {\n          reward_id\n          name\n          amount_off_currency\n          amount_off_in_subunit\n          percentage_off\n          points_redemption\n          reward_discount_type\n        }\n        ineligible_rewards {\n          reward_id\n          name\n          amount_off_currency\n          amount_off_in_subunit\n          percentage_off\n          points_redemption\n          reward_discount_type\n        }\n        history {\n          type\n          created_at\n          points\n        }\n      }\n    }\n  }\n`;\n\nconst variables = { brand_uid: 'BRAND_UID' };\n\nclient\n  .query({ query, variables })\n  .then((res) => {\n    const { data } = res;\n    console.log(data);\n  })\n  .catch((err) => console.log(err));\n")))}p.isMDXComponent=!0}}]);
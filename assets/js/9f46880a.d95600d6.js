"use strict";(self.webpackChunkupzaar_docs=self.webpackChunkupzaar_docs||[]).push([[641],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>g});var o=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=o.createContext({}),s=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=s(t.components);return o.createElement(l.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,l=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),p=s(n),m=i,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?o.createElement(g,a(a({ref:e},u),{},{components:n})):o.createElement(g,a({ref:e},u))}));function g(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,a=new Array(r);a[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c[p]="string"==typeof t?t:i,a[1]=c;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},187:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var o=n(7462),i=(n(7294),n(3905));const r={title:"Awarding Points",description:"Give your Customers loyalty points",hide_table_of_contents:!1,sidebar_position:3},a=void 0,c={unversionedId:"api-guides/awarding-points",id:"api-guides/awarding-points",title:"Awarding Points",description:"Give your Customers loyalty points",source:"@site/docs/api-guides/awarding-points.mdx",sourceDirName:"api-guides",slug:"/api-guides/awarding-points",permalink:"/docs/api-guides/awarding-points",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-guides/awarding-points.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Awarding Points",description:"Give your Customers loyalty points",hide_table_of_contents:!1,sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Retrieving a Customer Account & loyalty point balance",permalink:"/docs/api-guides/retrieving-customer-account"},next:{title:"Redeeming Rewards",permalink:"/docs/api-guides/redeeming-rewards"}},l={},s=[{value:"Collecting using a Point Collection Activity",id:"collecting-using-a-point-collection-activity",level:3},{value:"Collecting a Set Amount of Points",id:"collecting-a-set-amount-of-points",level:3}],u={toc:s};function p(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Collecting points is a core operation of your loyalty program. We offer two methods of collecting points - via a value on your API - or an existing point collection activity. Using point collection activities ensures you're able to update your point assignments in a single place on our management portal."),(0,i.kt)("h3",{id:"collecting-using-a-point-collection-activity"},"Collecting using a Point Collection Activity"),(0,i.kt)("p",null,"In axios, collecting on a specific point collection activity may look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"const collectPoints = async (brandUid, data) => {\n  try {\n    const mutation = `mutation {\n      collect_points(\n        brand_uid: \"${brandUid}\",\n        data: {\n          customer_uid: \"${data.customerUid}\",\n          point_collection_activity_id: 9\n        }\n      ) {\n        status\n        errors\n      }\n    }`;\n\n    const { data } = await axios({\n      url: 'API_ENDPOINT',\n      method: 'post',\n      data: {\n        query: mutation\n      }\n    });\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n")),(0,i.kt)("h3",{id:"collecting-a-set-amount-of-points"},"Collecting a Set Amount of Points"),(0,i.kt)("p",null,"In axios, collecting 100 points for a specific customer may look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"const collectPoints = async (brandUid, data) => {\n  try {\n    const mutation = `mutation {\n      collect_points(\n        brand_uid: \"${brandUid}\",\n        data: {\n          customer_uid: \"${data.customerUid}\",\n          point_amount: 100,\n          point_collection_activity_id: 9\n        }\n      ) {\n        status\n        errors\n      }\n    }`;\n\n    const { data } = await axios({\n      url: 'API_ENDPOINT',\n      method: 'post',\n      data: {\n        query: mutation\n      }\n    });\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n")))}p.isMDXComponent=!0}}]);